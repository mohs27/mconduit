export interface PipedVideo {
  title: string;
  description: string;
  uploadDate: string;
  uploader: string;
  uploaderUrl: string;
  uploaderAvatar: string;
  thumbnailUrl: string;
  hls: string;
  dash: string | null;
  lbryId: string | null;
  category: string;
  license: string;
  visibility: string;
  tags: string[];
  uploaderVerified: boolean;
  duration: number;
  views: number;
  likes: number;
  dislikes: number;
  uploaderSubscriberCount: number;
  audioStreams: AudioStream[] | null;
  videoStreams: VideoStream[] | null;
  relatedStreams: RelatedStream[];
  subtitles: Subtitle[];
  livestream: boolean;
  proxyUrl: string;
  chapters: Chapter[];
  previewFrames: PreviewFrame[];
}

export interface AudioStream {
  url: string;
  format: string;
  quality: string;
  mimeType: string;
  codec: string;
  audioTrackId: any;
  audioTrackName: any;
  audioTrackType: any;
  audioTrackLocale: any;
  videoOnly: boolean;
  itag: number;
  bitrate: number;
  initStart: number;
  initEnd: number;
  indexStart: number;
  indexEnd: number;
  width: number;
  height: number;
  fps: number;
  contentLength: number;
}

export interface VideoStream {
  url: string;
  format: string;
  quality: string;
  mimeType: string;
  codec?: string;
  audioTrackId: any;
  audioTrackName: any;
  audioTrackType: any;
  audioTrackLocale: any;
  videoOnly: boolean;
  itag: number;
  bitrate: number;
  initStart: number;
  initEnd: number;
  indexStart: number;
  indexEnd: number;
  width: number;
  height: number;
  fps: number;
  contentLength: number;
}

export interface Subtitle {
  url: string;
  mimeType: string;
  name: string;
  code: string;
  autoGenerated: boolean;
}

export interface Chapter {
  title: string;
  image: string;
  start: number;
}

export interface PreviewFrame {
  urls: string[];
  frameWidth: number;
  frameHeight: number;
  totalCount: number;
  durationPerFrame: number;
  framesPerPageX: number;
  framesPerPageY: number;
}

export interface TrendingStream {
  url: string;
  type: string;
  title: string;
  thumbnail: string;
  uploaderName: string;
  uploaderUrl: string;
  uploaderAvatar: string;
  uploadedDate: string;
  shortDescription: string;
  duration: number;
  views: number;
  uploaded: number;
  uploaderVerified: boolean;
  isShort: boolean;
}

export interface PipedInstance {
  name: string;
  api_url: string;
  locations: string;
  version: string;
  up_to_date: boolean;
  cdn: boolean;
  registered: number;
  last_checked: number;
  cache: boolean;
  s3_enabled: boolean;
  image_proxy_url: string;
  registration_disabled: boolean;
  uptime_24h: number;
  uptime_7d: number;
  uptime_30d: number;
}

export interface PipedChannelResponse {
  channel: Channel;
}

export interface Channel {
  id?: string;
  name?: string;
  avatarUrl?: string;
  bannerUrl?: string;
  description?: string;
  nextpage?: any;
  subscriberCount?: number;
  verified?: boolean;
  relatedStreams?: RelatedStream[];
  tabs?: Tab[];
}

export interface Tab {
  name: string;
  data: string;
}

export interface Tab {
  name: string;
  data: string;
  tabNextPage?: any;
  content?: RelatedStream[];
}

export interface Playlist {
  name: string;
  thumbnailUrl: string;
  description: string;
  bannerUrl: any;
  nextpage: any;
  uploader: string;
  uploaderUrl: string;
  uploaderAvatar: string;
  videos: number;
  relatedStreams: RelatedStream[];
}
export interface ConduitPlaylist extends Playlist {
  relatedStreams: (RelatedStream & {
    order: number;
    timeAdded: number;
  })[];
}

export interface RelatedStream {
  url: string;
  type: string;
  title: string;
  thumbnail: string;
  uploaderName: string;
  uploaderUrl: string;
  uploaderAvatar: string | null;
  uploadedDate: string;
  shortDescription: string | null;
  duration: number;
  views: number;
  uploaded: number;
  uploaderVerified: boolean;
  isShort: boolean;
}
export interface RelatedChannel {
  url: string;
  type: "channel";
  name: string;
  thumbnail: string;
  description: any;
  subscribers: number;
  videos: number;
  verified: boolean;
}

export interface RelatedPlaylist {
  url: string;
  type: "playlist";
  name: string;
  thumbnail: string;
  uploaderName: string;
  uploaderUrl: string;
  uploaderVerified: boolean;
  playlistType: string;
  videos: number;
}

export type ContentItem = RelatedStream | RelatedChannel | RelatedPlaylist;
